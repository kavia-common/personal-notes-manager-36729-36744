{"is_source_file": true, "format": "Python", "description": "This file contains CRUD (Create, Read, Update, Delete) functions for managing 'Note' entities in a database, using SQLAlchemy ORM. It provides functions for creating, retrieving, listing, updating, and deleting notes, interacting with models and schemas modules.", "external_files": ["models", "schemas"], "external_methods": ["db.get", "db.add", "db.commit", "db.refresh", "db.execute", "db.delete"], "published": ["create_note", "get_note", "list_notes", "update_note", "delete_note"], "classes": [], "methods": [{"name": "models.Note create_note(db: Session, note_in: schemas.NoteCreate)", "description": "Creates a new note in the database using provided NoteCreate schema.", "scope": "", "scopeKind": ""}, {"name": "Optional[models.Note] get_note(db: Session, note_id: int)", "description": "Retrieves a note by its ID.", "scope": "", "scopeKind": ""}, {"name": "List[models.Note] list_notes(db: Session, skip: int = 0, limit: int = 100)", "description": "Lists notes with optional pagination via skip and limit.", "scope": "", "scopeKind": ""}, {"name": "models.Note update_note(db: Session, note: models.Note, note_in: schemas.NoteUpdate)", "description": "Updates an existing note with data from NoteUpdate schema.", "scope": "", "scopeKind": ""}, {"name": "None delete_note(db: Session, note: models.Note)", "description": "Deletes the specified note from the database.", "scope": "", "scopeKind": ""}], "calls": ["db.get", "db.add", "db.commit", "db.refresh", "db.execute", "db.delete"], "search-terms": ["crud", "note management", "SQLAlchemy", "database operations", "notes backend", "api functions"], "state": 2, "file_id": 8, "knowledge_revision": 17, "git_revision": "", "ctags": [{"_type": "tag", "name": "create_note", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-36729-36744/notes_backend/src/api/crud.py", "pattern": "/^def create_note(db: Session, note_in: schemas.NoteCreate) -> models.Note:$/", "language": "Python", "typeref": "typename:models.Note", "kind": "function", "signature": "(db: Session, note_in: schemas.NoteCreate)"}, {"_type": "tag", "name": "delete_note", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-36729-36744/notes_backend/src/api/crud.py", "pattern": "/^def delete_note(db: Session, note: models.Note) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "(db: Session, note: models.Note)"}, {"_type": "tag", "name": "get_note", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-36729-36744/notes_backend/src/api/crud.py", "pattern": "/^def get_note(db: Session, note_id: int) -> Optional[models.Note]:$/", "language": "Python", "typeref": "typename:Optional[models.Note]", "kind": "function", "signature": "(db: Session, note_id: int)"}, {"_type": "tag", "name": "list_notes", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-36729-36744/notes_backend/src/api/crud.py", "pattern": "/^def list_notes(db: Session, skip: int = 0, limit: int = 100) -> List[models.Note]:$/", "language": "Python", "typeref": "typename:List[models.Note]", "kind": "function", "signature": "(db: Session, skip: int = 0, limit: int = 100)"}, {"_type": "tag", "name": "update_note", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-36729-36744/notes_backend/src/api/crud.py", "pattern": "/^def update_note(db: Session, note: models.Note, note_in: schemas.NoteUpdate) -> models.Note:$/", "language": "Python", "typeref": "typename:models.Note", "kind": "function", "signature": "(db: Session, note: models.Note, note_in: schemas.NoteUpdate)"}], "hash": "6ec441e5529b5c743fe2900151887317", "format-version": 4, "code-base-name": "notes_backend", "filename": "notes_backend/src/api/crud.py", "revision_history": [{"17": ""}]}